Do the below programs in anonymous function & IIFE
a)Print odd numbers in an array
b)Convert all the strings to title caps in a string array
c)Sum of all numbers in an array
d)Return all the prime numbers in an array
e)Return all the palindromes in an array
f)Return median of two sorted arrays of the same size.
g)Remove duplicates from an array
h)Rotate an array by k times


// 1. Do the below programs in anonymous function & IIFE

// Print odd numbers in an array

// Anonymous function
var num = [1, 2, 3, 4, 5];
var printOddNumbers = function(arr) {
    for (var n of arr) { 
        if (n % 2 !== 0) {
            console.log(n);
        }
    }
}

printOddNumbers(num); 

// IIFE
(function(arr) {
    for (let num of arr) {
        if (num % 2 !== 0) {
            console.log(num);
        }
    }
})([1, 2, 3, 4, 5]);

// Convert all the strings to title caps in a string array

// Anonymous function
var convertToTitleCaps = function(arr) {
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        result.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1).toLowerCase());
    }
    return result;
};
console.log(convertToTitleCaps(["hello", "world"]));

// IIFE

var convertToTitleCaps = (function(arr) {
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        result.push(arr[i].charAt(0).toUpperCase() + arr[i].slice(1).toLowerCase());
    }
    return result;
})(["hello", "world"]);

console.log(convertToTitleCaps);

// Sum of all numbers in an array

// Anonymous function
var sumArray = function(arr) {
    var sum = 0;
    for (var i = 0; i < arr.length; i++) {
        sum += arr[i];
    }
    return sum;
};

console.log(sumArray([1, 2, 3, 4, 5]));

// IIFE

var sum = (function(arr) {
    var sum = 0;
    for (var i = 0; i < arr.length; i++) {
        sum += arr[i];
    }
    return sum;
})([1, 2, 3, 4, 5]);

console.log(sum);

// Return all the prime numbers in an array

// Anonymous function
var getPrimeNumbers = function(arr) {
    return arr.filter(function(num) {
        if (num <= 1) return false;
        for (var i = 2; i <= Math.sqrt(num); i++) {
            if (num % i === 0) return false;
        }
        return true;
    });
};

// IIFE
var primeNumbers = (function(arr) {
    return arr.filter(function(num) {
        if (num <= 1) return false;
        for (var i = 2; i <= Math.sqrt(num); i++) {
            if (num % i === 0) return false;
        }
        return true;
    });
})([1, 2, 3, 4, 5, 6, 7, 8]);

console.log(primeNumbers);

// Return all the palindromes in an array

// Anonymous function
var getPalindromes = function(arr) {
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] === arr[i].split('').reverse().join('')) {
            result.push(arr[i]);
        }
    }
    return result;
};

console.log(getPalindromes(["noon", "level", "hello", "world"]));

// IIFE

var getPalindromes = (function(arr) {
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        if (arr[i] === arr[i].split('').reverse().join('')) {
            result.push(arr[i]);
        }
    }
    return result;
})(["noon", "level", "hello", "world"]);

console.log(getPalindromes);

// Return median of two sorted arrays of the same size.

// Anonymous function
var findMedianSortedArrays = function(nums1, nums2) {
    var merged = nums1.concat(nums2).sort((a, b) => a - b);
    var length = merged.length;
    if (length % 2 === 0) {
        return (merged[length / 2 - 1] + merged[length / 2]) / 2;
    } else {
        return merged[Math.floor(length / 2)];
    }
};

console.log(findMedianSortedArrays([1, 3], [2, 4]));

// IIFE

var findMedianSortedArrays = (function(nums1, nums2) {
    var merged = nums1.concat(nums2).sort(function(a, b) {
        return a - b;
    });
    var length = merged.length;
    if (length % 2 === 0) {
        return (merged[length / 2 - 1] + merged[length / 2]) / 2;
    } else {
        return merged[Math.floor(length / 2)];
    }
})([1, 3], [2, 4]);

console.log(findMedianSortedArrays);

// Remove duplicates from an array

// Anonymous function
var removeDuplicates = function(arr) {
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        if (result.indexOf(arr[i]) === -1) {
            result.push(arr[i]);
        }
    }
    return result;
};

console.log(removeDuplicates([1, 2, 2, 3, 4, 4, 5]));

// IIFE

var removeDuplicates = (function(arr) {
    var result = [];
    for (var i = 0; i < arr.length; i++) {
        if (result.indexOf(arr[i]) === -1) {
            result.push(arr[i]);
        }
    }
    return result;
})([1, 2, 2, 3, 4, 4, 5]);

console.log(removeDuplicates);

// Rotate an array by k times

// Anonymous function
var rotateArray = function(arr, k) {
    var n = arr.length;
    var rotations = k % n;
    var rotatedArray = arr.slice(rotations).concat(arr.slice(0, rotations));
    return rotatedArray;
};

console.log(rotateArray([1, 2, 3, 4, 5], 2));

// IIFE

var rotateArray = (function(arr, k) {
    var n = arr.length;
    var rotations = k % n;
    var rotatedArray = arr.slice(rotations).concat(arr.slice(0, rotations));
    return rotatedArray;
})([1, 2, 3, 4, 5], 2);

console.log(rotateArray);


